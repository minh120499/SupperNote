/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as TravelsIndexImport } from './routes/travels/index'
import { Route as KnowledgesIndexImport } from './routes/knowledges/index'
import { Route as FinancesIndexImport } from './routes/finances/index'
import { Route as AboutusIndexImport } from './routes/about_us/index'
import { Route as TravelsPathlessLayoutRouteImport } from './routes/travels/_pathlessLayout/route'
import { Route as KnowledgesProgrammingIndexImport } from './routes/knowledges/programming/index'
import { Route as KnowledgesEnglishIndexImport } from './routes/knowledges/english/index'
import { Route as KnowledgesProgrammingCreateImport } from './routes/knowledges/programming/create'
import { Route as KnowledgesEnglishCreateImport } from './routes/knowledges/english/create'
import { Route as TravelsPathlessLayoutFoodsIndexImport } from './routes/travels/_pathlessLayout/foods/index'
import { Route as KnowledgesProgrammingUnitIndexImport } from './routes/knowledges/programming/$unit/index'
import { Route as KnowledgesEnglishUnitIndexImport } from './routes/knowledges/english/$unit/index'
import { Route as TravelsPathlessLayoutFoodsTestImport } from './routes/travels/_pathlessLayout/foods/test'
import { Route as KnowledgesEnglishUnitEditImport } from './routes/knowledges/english/$unit/edit'

// Create Virtual Routes

const TravelsImport = createFileRoute('/travels')()

// Create/Update Routes

const TravelsRoute = TravelsImport.update({
  id: '/travels',
  path: '/travels',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TravelsIndexRoute = TravelsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TravelsRoute,
} as any)

const KnowledgesIndexRoute = KnowledgesIndexImport.update({
  id: '/knowledges/',
  path: '/knowledges/',
  getParentRoute: () => rootRoute,
} as any)

const FinancesIndexRoute = FinancesIndexImport.update({
  id: '/finances/',
  path: '/finances/',
  getParentRoute: () => rootRoute,
} as any)

const AboutusIndexRoute = AboutusIndexImport.update({
  id: '/about_us/',
  path: '/about_us/',
  getParentRoute: () => rootRoute,
} as any)

const TravelsPathlessLayoutRouteRoute = TravelsPathlessLayoutRouteImport.update(
  {
    id: '/_pathlessLayout',
    getParentRoute: () => TravelsRoute,
  } as any,
)

const KnowledgesProgrammingIndexRoute = KnowledgesProgrammingIndexImport.update(
  {
    id: '/knowledges/programming/',
    path: '/knowledges/programming/',
    getParentRoute: () => rootRoute,
  } as any,
)

const KnowledgesEnglishIndexRoute = KnowledgesEnglishIndexImport.update({
  id: '/knowledges/english/',
  path: '/knowledges/english/',
  getParentRoute: () => rootRoute,
} as any)

const KnowledgesProgrammingCreateRoute =
  KnowledgesProgrammingCreateImport.update({
    id: '/knowledges/programming/create',
    path: '/knowledges/programming/create',
    getParentRoute: () => rootRoute,
  } as any)

const KnowledgesEnglishCreateRoute = KnowledgesEnglishCreateImport.update({
  id: '/knowledges/english/create',
  path: '/knowledges/english/create',
  getParentRoute: () => rootRoute,
} as any)

const TravelsPathlessLayoutFoodsIndexRoute =
  TravelsPathlessLayoutFoodsIndexImport.update({
    id: '/foods/',
    path: '/foods/',
    getParentRoute: () => TravelsPathlessLayoutRouteRoute,
  } as any)

const KnowledgesProgrammingUnitIndexRoute =
  KnowledgesProgrammingUnitIndexImport.update({
    id: '/knowledges/programming/$unit/',
    path: '/knowledges/programming/$unit/',
    getParentRoute: () => rootRoute,
  } as any)

const KnowledgesEnglishUnitIndexRoute = KnowledgesEnglishUnitIndexImport.update(
  {
    id: '/knowledges/english/$unit/',
    path: '/knowledges/english/$unit/',
    getParentRoute: () => rootRoute,
  } as any,
)

const TravelsPathlessLayoutFoodsTestRoute =
  TravelsPathlessLayoutFoodsTestImport.update({
    id: '/foods/test',
    path: '/foods/test',
    getParentRoute: () => TravelsPathlessLayoutRouteRoute,
  } as any)

const KnowledgesEnglishUnitEditRoute = KnowledgesEnglishUnitEditImport.update({
  id: '/knowledges/english/$unit/edit',
  path: '/knowledges/english/$unit/edit',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/travels': {
      id: '/travels'
      path: '/travels'
      fullPath: '/travels'
      preLoaderRoute: typeof TravelsImport
      parentRoute: typeof rootRoute
    }
    '/travels/_pathlessLayout': {
      id: '/travels/_pathlessLayout'
      path: '/travels'
      fullPath: '/travels'
      preLoaderRoute: typeof TravelsPathlessLayoutRouteImport
      parentRoute: typeof TravelsRoute
    }
    '/about_us/': {
      id: '/about_us/'
      path: '/about_us'
      fullPath: '/about_us'
      preLoaderRoute: typeof AboutusIndexImport
      parentRoute: typeof rootRoute
    }
    '/finances/': {
      id: '/finances/'
      path: '/finances'
      fullPath: '/finances'
      preLoaderRoute: typeof FinancesIndexImport
      parentRoute: typeof rootRoute
    }
    '/knowledges/': {
      id: '/knowledges/'
      path: '/knowledges'
      fullPath: '/knowledges'
      preLoaderRoute: typeof KnowledgesIndexImport
      parentRoute: typeof rootRoute
    }
    '/travels/': {
      id: '/travels/'
      path: '/'
      fullPath: '/travels/'
      preLoaderRoute: typeof TravelsIndexImport
      parentRoute: typeof TravelsImport
    }
    '/knowledges/english/create': {
      id: '/knowledges/english/create'
      path: '/knowledges/english/create'
      fullPath: '/knowledges/english/create'
      preLoaderRoute: typeof KnowledgesEnglishCreateImport
      parentRoute: typeof rootRoute
    }
    '/knowledges/programming/create': {
      id: '/knowledges/programming/create'
      path: '/knowledges/programming/create'
      fullPath: '/knowledges/programming/create'
      preLoaderRoute: typeof KnowledgesProgrammingCreateImport
      parentRoute: typeof rootRoute
    }
    '/knowledges/english/': {
      id: '/knowledges/english/'
      path: '/knowledges/english'
      fullPath: '/knowledges/english'
      preLoaderRoute: typeof KnowledgesEnglishIndexImport
      parentRoute: typeof rootRoute
    }
    '/knowledges/programming/': {
      id: '/knowledges/programming/'
      path: '/knowledges/programming'
      fullPath: '/knowledges/programming'
      preLoaderRoute: typeof KnowledgesProgrammingIndexImport
      parentRoute: typeof rootRoute
    }
    '/knowledges/english/$unit/edit': {
      id: '/knowledges/english/$unit/edit'
      path: '/knowledges/english/$unit/edit'
      fullPath: '/knowledges/english/$unit/edit'
      preLoaderRoute: typeof KnowledgesEnglishUnitEditImport
      parentRoute: typeof rootRoute
    }
    '/travels/_pathlessLayout/foods/test': {
      id: '/travels/_pathlessLayout/foods/test'
      path: '/foods/test'
      fullPath: '/travels/foods/test'
      preLoaderRoute: typeof TravelsPathlessLayoutFoodsTestImport
      parentRoute: typeof TravelsPathlessLayoutRouteImport
    }
    '/knowledges/english/$unit/': {
      id: '/knowledges/english/$unit/'
      path: '/knowledges/english/$unit'
      fullPath: '/knowledges/english/$unit'
      preLoaderRoute: typeof KnowledgesEnglishUnitIndexImport
      parentRoute: typeof rootRoute
    }
    '/knowledges/programming/$unit/': {
      id: '/knowledges/programming/$unit/'
      path: '/knowledges/programming/$unit'
      fullPath: '/knowledges/programming/$unit'
      preLoaderRoute: typeof KnowledgesProgrammingUnitIndexImport
      parentRoute: typeof rootRoute
    }
    '/travels/_pathlessLayout/foods/': {
      id: '/travels/_pathlessLayout/foods/'
      path: '/foods'
      fullPath: '/travels/foods'
      preLoaderRoute: typeof TravelsPathlessLayoutFoodsIndexImport
      parentRoute: typeof TravelsPathlessLayoutRouteImport
    }
  }
}

// Create and export the route tree

interface TravelsPathlessLayoutRouteRouteChildren {
  TravelsPathlessLayoutFoodsTestRoute: typeof TravelsPathlessLayoutFoodsTestRoute
  TravelsPathlessLayoutFoodsIndexRoute: typeof TravelsPathlessLayoutFoodsIndexRoute
}

const TravelsPathlessLayoutRouteRouteChildren: TravelsPathlessLayoutRouteRouteChildren =
  {
    TravelsPathlessLayoutFoodsTestRoute: TravelsPathlessLayoutFoodsTestRoute,
    TravelsPathlessLayoutFoodsIndexRoute: TravelsPathlessLayoutFoodsIndexRoute,
  }

const TravelsPathlessLayoutRouteRouteWithChildren =
  TravelsPathlessLayoutRouteRoute._addFileChildren(
    TravelsPathlessLayoutRouteRouteChildren,
  )

interface TravelsRouteChildren {
  TravelsPathlessLayoutRouteRoute: typeof TravelsPathlessLayoutRouteRouteWithChildren
  TravelsIndexRoute: typeof TravelsIndexRoute
}

const TravelsRouteChildren: TravelsRouteChildren = {
  TravelsPathlessLayoutRouteRoute: TravelsPathlessLayoutRouteRouteWithChildren,
  TravelsIndexRoute: TravelsIndexRoute,
}

const TravelsRouteWithChildren =
  TravelsRoute._addFileChildren(TravelsRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/travels': typeof TravelsPathlessLayoutRouteRouteWithChildren
  '/about_us': typeof AboutusIndexRoute
  '/finances': typeof FinancesIndexRoute
  '/knowledges': typeof KnowledgesIndexRoute
  '/travels/': typeof TravelsIndexRoute
  '/knowledges/english/create': typeof KnowledgesEnglishCreateRoute
  '/knowledges/programming/create': typeof KnowledgesProgrammingCreateRoute
  '/knowledges/english': typeof KnowledgesEnglishIndexRoute
  '/knowledges/programming': typeof KnowledgesProgrammingIndexRoute
  '/knowledges/english/$unit/edit': typeof KnowledgesEnglishUnitEditRoute
  '/travels/foods/test': typeof TravelsPathlessLayoutFoodsTestRoute
  '/knowledges/english/$unit': typeof KnowledgesEnglishUnitIndexRoute
  '/knowledges/programming/$unit': typeof KnowledgesProgrammingUnitIndexRoute
  '/travels/foods': typeof TravelsPathlessLayoutFoodsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/travels': typeof TravelsIndexRoute
  '/about_us': typeof AboutusIndexRoute
  '/finances': typeof FinancesIndexRoute
  '/knowledges': typeof KnowledgesIndexRoute
  '/knowledges/english/create': typeof KnowledgesEnglishCreateRoute
  '/knowledges/programming/create': typeof KnowledgesProgrammingCreateRoute
  '/knowledges/english': typeof KnowledgesEnglishIndexRoute
  '/knowledges/programming': typeof KnowledgesProgrammingIndexRoute
  '/knowledges/english/$unit/edit': typeof KnowledgesEnglishUnitEditRoute
  '/travels/foods/test': typeof TravelsPathlessLayoutFoodsTestRoute
  '/knowledges/english/$unit': typeof KnowledgesEnglishUnitIndexRoute
  '/knowledges/programming/$unit': typeof KnowledgesProgrammingUnitIndexRoute
  '/travels/foods': typeof TravelsPathlessLayoutFoodsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/travels': typeof TravelsRouteWithChildren
  '/travels/_pathlessLayout': typeof TravelsPathlessLayoutRouteRouteWithChildren
  '/about_us/': typeof AboutusIndexRoute
  '/finances/': typeof FinancesIndexRoute
  '/knowledges/': typeof KnowledgesIndexRoute
  '/travels/': typeof TravelsIndexRoute
  '/knowledges/english/create': typeof KnowledgesEnglishCreateRoute
  '/knowledges/programming/create': typeof KnowledgesProgrammingCreateRoute
  '/knowledges/english/': typeof KnowledgesEnglishIndexRoute
  '/knowledges/programming/': typeof KnowledgesProgrammingIndexRoute
  '/knowledges/english/$unit/edit': typeof KnowledgesEnglishUnitEditRoute
  '/travels/_pathlessLayout/foods/test': typeof TravelsPathlessLayoutFoodsTestRoute
  '/knowledges/english/$unit/': typeof KnowledgesEnglishUnitIndexRoute
  '/knowledges/programming/$unit/': typeof KnowledgesProgrammingUnitIndexRoute
  '/travels/_pathlessLayout/foods/': typeof TravelsPathlessLayoutFoodsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/travels'
    | '/about_us'
    | '/finances'
    | '/knowledges'
    | '/travels/'
    | '/knowledges/english/create'
    | '/knowledges/programming/create'
    | '/knowledges/english'
    | '/knowledges/programming'
    | '/knowledges/english/$unit/edit'
    | '/travels/foods/test'
    | '/knowledges/english/$unit'
    | '/knowledges/programming/$unit'
    | '/travels/foods'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/travels'
    | '/about_us'
    | '/finances'
    | '/knowledges'
    | '/knowledges/english/create'
    | '/knowledges/programming/create'
    | '/knowledges/english'
    | '/knowledges/programming'
    | '/knowledges/english/$unit/edit'
    | '/travels/foods/test'
    | '/knowledges/english/$unit'
    | '/knowledges/programming/$unit'
    | '/travels/foods'
  id:
    | '__root__'
    | '/'
    | '/travels'
    | '/travels/_pathlessLayout'
    | '/about_us/'
    | '/finances/'
    | '/knowledges/'
    | '/travels/'
    | '/knowledges/english/create'
    | '/knowledges/programming/create'
    | '/knowledges/english/'
    | '/knowledges/programming/'
    | '/knowledges/english/$unit/edit'
    | '/travels/_pathlessLayout/foods/test'
    | '/knowledges/english/$unit/'
    | '/knowledges/programming/$unit/'
    | '/travels/_pathlessLayout/foods/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  TravelsRoute: typeof TravelsRouteWithChildren
  AboutusIndexRoute: typeof AboutusIndexRoute
  FinancesIndexRoute: typeof FinancesIndexRoute
  KnowledgesIndexRoute: typeof KnowledgesIndexRoute
  KnowledgesEnglishCreateRoute: typeof KnowledgesEnglishCreateRoute
  KnowledgesProgrammingCreateRoute: typeof KnowledgesProgrammingCreateRoute
  KnowledgesEnglishIndexRoute: typeof KnowledgesEnglishIndexRoute
  KnowledgesProgrammingIndexRoute: typeof KnowledgesProgrammingIndexRoute
  KnowledgesEnglishUnitEditRoute: typeof KnowledgesEnglishUnitEditRoute
  KnowledgesEnglishUnitIndexRoute: typeof KnowledgesEnglishUnitIndexRoute
  KnowledgesProgrammingUnitIndexRoute: typeof KnowledgesProgrammingUnitIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  TravelsRoute: TravelsRouteWithChildren,
  AboutusIndexRoute: AboutusIndexRoute,
  FinancesIndexRoute: FinancesIndexRoute,
  KnowledgesIndexRoute: KnowledgesIndexRoute,
  KnowledgesEnglishCreateRoute: KnowledgesEnglishCreateRoute,
  KnowledgesProgrammingCreateRoute: KnowledgesProgrammingCreateRoute,
  KnowledgesEnglishIndexRoute: KnowledgesEnglishIndexRoute,
  KnowledgesProgrammingIndexRoute: KnowledgesProgrammingIndexRoute,
  KnowledgesEnglishUnitEditRoute: KnowledgesEnglishUnitEditRoute,
  KnowledgesEnglishUnitIndexRoute: KnowledgesEnglishUnitIndexRoute,
  KnowledgesProgrammingUnitIndexRoute: KnowledgesProgrammingUnitIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/travels",
        "/about_us/",
        "/finances/",
        "/knowledges/",
        "/knowledges/english/create",
        "/knowledges/programming/create",
        "/knowledges/english/",
        "/knowledges/programming/",
        "/knowledges/english/$unit/edit",
        "/knowledges/english/$unit/",
        "/knowledges/programming/$unit/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/travels": {
      "filePath": "travels/_pathlessLayout",
      "children": [
        "/travels/_pathlessLayout",
        "/travels/"
      ]
    },
    "/travels/_pathlessLayout": {
      "filePath": "travels/_pathlessLayout/route.tsx",
      "parent": "/travels",
      "children": [
        "/travels/_pathlessLayout/foods/test",
        "/travels/_pathlessLayout/foods/"
      ]
    },
    "/about_us/": {
      "filePath": "about_us/index.tsx"
    },
    "/finances/": {
      "filePath": "finances/index.tsx"
    },
    "/knowledges/": {
      "filePath": "knowledges/index.tsx"
    },
    "/travels/": {
      "filePath": "travels/index.tsx",
      "parent": "/travels"
    },
    "/knowledges/english/create": {
      "filePath": "knowledges/english/create.tsx"
    },
    "/knowledges/programming/create": {
      "filePath": "knowledges/programming/create.tsx"
    },
    "/knowledges/english/": {
      "filePath": "knowledges/english/index.tsx"
    },
    "/knowledges/programming/": {
      "filePath": "knowledges/programming/index.tsx"
    },
    "/knowledges/english/$unit/edit": {
      "filePath": "knowledges/english/$unit/edit.tsx"
    },
    "/travels/_pathlessLayout/foods/test": {
      "filePath": "travels/_pathlessLayout/foods/test.tsx",
      "parent": "/travels/_pathlessLayout"
    },
    "/knowledges/english/$unit/": {
      "filePath": "knowledges/english/$unit/index.tsx"
    },
    "/knowledges/programming/$unit/": {
      "filePath": "knowledges/programming/$unit/index.tsx"
    },
    "/travels/_pathlessLayout/foods/": {
      "filePath": "travels/_pathlessLayout/foods/index.tsx",
      "parent": "/travels/_pathlessLayout"
    }
  }
}
ROUTE_MANIFEST_END */
