/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as KnowledgesIndexImport } from './routes/knowledges/index'
import { Route as FinancesIndexImport } from './routes/finances/index'
import { Route as AboutusIndexImport } from './routes/about_us/index'
import { Route as KnowledgesProgrammingImport } from './routes/knowledges/programming'
import { Route as KnowledgesEnglishImport } from './routes/knowledges/english'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const KnowledgesIndexRoute = KnowledgesIndexImport.update({
  id: '/knowledges/',
  path: '/knowledges/',
  getParentRoute: () => rootRoute,
} as any)

const FinancesIndexRoute = FinancesIndexImport.update({
  id: '/finances/',
  path: '/finances/',
  getParentRoute: () => rootRoute,
} as any)

const AboutusIndexRoute = AboutusIndexImport.update({
  id: '/about_us/',
  path: '/about_us/',
  getParentRoute: () => rootRoute,
} as any)

const KnowledgesProgrammingRoute = KnowledgesProgrammingImport.update({
  id: '/knowledges/programming',
  path: '/knowledges/programming',
  getParentRoute: () => rootRoute,
} as any)

const KnowledgesEnglishRoute = KnowledgesEnglishImport.update({
  id: '/knowledges/english',
  path: '/knowledges/english',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/knowledges/english': {
      id: '/knowledges/english'
      path: '/knowledges/english'
      fullPath: '/knowledges/english'
      preLoaderRoute: typeof KnowledgesEnglishImport
      parentRoute: typeof rootRoute
    }
    '/knowledges/programming': {
      id: '/knowledges/programming'
      path: '/knowledges/programming'
      fullPath: '/knowledges/programming'
      preLoaderRoute: typeof KnowledgesProgrammingImport
      parentRoute: typeof rootRoute
    }
    '/about_us/': {
      id: '/about_us/'
      path: '/about_us'
      fullPath: '/about_us'
      preLoaderRoute: typeof AboutusIndexImport
      parentRoute: typeof rootRoute
    }
    '/finances/': {
      id: '/finances/'
      path: '/finances'
      fullPath: '/finances'
      preLoaderRoute: typeof FinancesIndexImport
      parentRoute: typeof rootRoute
    }
    '/knowledges/': {
      id: '/knowledges/'
      path: '/knowledges'
      fullPath: '/knowledges'
      preLoaderRoute: typeof KnowledgesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/knowledges/english': typeof KnowledgesEnglishRoute
  '/knowledges/programming': typeof KnowledgesProgrammingRoute
  '/about_us': typeof AboutusIndexRoute
  '/finances': typeof FinancesIndexRoute
  '/knowledges': typeof KnowledgesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/knowledges/english': typeof KnowledgesEnglishRoute
  '/knowledges/programming': typeof KnowledgesProgrammingRoute
  '/about_us': typeof AboutusIndexRoute
  '/finances': typeof FinancesIndexRoute
  '/knowledges': typeof KnowledgesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/knowledges/english': typeof KnowledgesEnglishRoute
  '/knowledges/programming': typeof KnowledgesProgrammingRoute
  '/about_us/': typeof AboutusIndexRoute
  '/finances/': typeof FinancesIndexRoute
  '/knowledges/': typeof KnowledgesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/knowledges/english'
    | '/knowledges/programming'
    | '/about_us'
    | '/finances'
    | '/knowledges'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/knowledges/english'
    | '/knowledges/programming'
    | '/about_us'
    | '/finances'
    | '/knowledges'
  id:
    | '__root__'
    | '/'
    | '/knowledges/english'
    | '/knowledges/programming'
    | '/about_us/'
    | '/finances/'
    | '/knowledges/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  KnowledgesEnglishRoute: typeof KnowledgesEnglishRoute
  KnowledgesProgrammingRoute: typeof KnowledgesProgrammingRoute
  AboutusIndexRoute: typeof AboutusIndexRoute
  FinancesIndexRoute: typeof FinancesIndexRoute
  KnowledgesIndexRoute: typeof KnowledgesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  KnowledgesEnglishRoute: KnowledgesEnglishRoute,
  KnowledgesProgrammingRoute: KnowledgesProgrammingRoute,
  AboutusIndexRoute: AboutusIndexRoute,
  FinancesIndexRoute: FinancesIndexRoute,
  KnowledgesIndexRoute: KnowledgesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/knowledges/english",
        "/knowledges/programming",
        "/about_us/",
        "/finances/",
        "/knowledges/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/knowledges/english": {
      "filePath": "knowledges/english.tsx"
    },
    "/knowledges/programming": {
      "filePath": "knowledges/programming.tsx"
    },
    "/about_us/": {
      "filePath": "about_us/index.tsx"
    },
    "/finances/": {
      "filePath": "finances/index.tsx"
    },
    "/knowledges/": {
      "filePath": "knowledges/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
